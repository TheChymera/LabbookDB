import codecs
import pydotplus
import sadisplay
from os import path
from labbookdb.db.query import ALLOWED_CLASSES

def generate(
	extent="all",
	save_dotfile="",
	save_plot="",
	label=""
	):
	"""Retreive the LabbookDB schema and save either a DOT file, or a PNG plot
	"""

	if extent == "all":
		desc = sadisplay.describe(ALLOWED_CLASSES.values())
	elif type(extent) is list:
		desc = sadisplay.describe([ALLOWED_CLASSES[key] for key in extent])

	if save_dotfile:
		save_dotfile = path.abspath(path.expanduser(save_dotfile))
		with codecs.open(save_dotfile, 'w', encoding='utf-8') as f:
			f.write(sadisplay.dot(desc))

	if save_plot:
		save_plot = path.abspath(path.expanduser(save_plot))
		dot = sadisplay.dot(desc)
		dot = dot.replace('label = "generated by sadisplay v0.4.8"', 'label = "{}"'.format(label))
		graph = pydotplus.graph_from_dot_data(dot)
		graph.write_png(save_plot)

if __name__ == '__main__':
	# generate(extent="all", save_plot="~/full_schema.png")
	generate(extent=["Animal","CageStay","Cage","Genotype","SucrosePreferenceMeasurement","FMRIMeasurement"], save_plot="~/measurements_schema.png")
	# generate(extent=["Animal","CageStay","Cage"], save_plot="~/cagestay_schema.png")
